{"version":3,"sources":["app/components/App.jsx","app/components/containers/musicPlayerContainer.js","app/components/features/controls.js","app/components/features/song.js","app/components/features/songlist.js","app/components/shared/error.js","app/initialize.js","app/playlist.js"],"names":["App","playlist","length","MusicPlayerContainer","props","songs","audioPlayer","isPlaying","setIsPlaying","currentSong","setCurrentSong","isShuffled","setIsShuffled","shuffledSongList","setShuffledSongList","current","play","pause","addEventListener","navigatePlaylist","shufflePlaylist","shuffledArray","i","j","Math","floor","random","temp","manuallySelectSong","song","event","songIndex","direction","target","value","lastSongInPlaylist","currentSongIndex","indexOf","e","id","Controls","handleNav","handlePlayOrPause","buttonCopy","track","url","Song","artist","album","SongList","handleShuffle","currentSongId","handleSelectSong","map","Error","document","ReactDOM","render","querySelector"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from 'react';\n\n// containers\nimport MusicPlayerContainer from './containers/musicPlayerContainer';\n\n// shared components\nimport Error from './shared/error';\n\n// song data\nimport playlist from '../playlist';\n\nconst App = () => {\n  return !playlist.length ? (\n    <MusicPlayerContainer songs={playlist} />\n  ) : (\n    <Error />\n  );\n};\n\nexport default App;\n","import React, { useEffect, useRef, useState } from 'react';\n\n// feature components\nimport Controls from '../features/controls';\nimport SongList from '../features/songlist';\n\nconst MusicPlayerContainer = (props) => {\n  const { songs } = props;\n  const audioPlayer = useRef(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n\n  const [isShuffled, setIsShuffled] = useState(false);\n  const [shuffledSongList, setShuffledSongList] = useState([]);\n\n  // Keep playing audio as long as `isPlaying` is true. If a new song is\n  // selected while `isPlaying` is true, start it up. If `isPlaying` is\n  // false, we pause the song!\n  useEffect(() => {\n    if (isPlaying) {\n      audioPlayer.current.play();\n    } else {\n      audioPlayer.current.pause();\n    }\n  }, [currentSong, isPlaying]);\n\n  // Listen for song end so we can find the next song and start\n  // playing it automatically.\n  useEffect(() => {\n    audioPlayer.current.addEventListener('ended', () => {\n      navigatePlaylist();\n    });\n  });\n\n  // This function does the two initial action items needed when a\n  // user toggles shuffle off or on - we set shuffle to the opposite\n  // of what it's currently set to, and we make a copy of our songs\n  // list and shuffle them, then set the shuffled list to state.\n  const shufflePlaylist = () => {\n    setIsShuffled(!isShuffled);\n\n    var shuffledArray = [...songs];\n\n    for (var i = shuffledArray.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = shuffledArray[i];\n      shuffledArray[i] = shuffledArray[j];\n      shuffledArray[j] = temp;\n    }\n\n    setShuffledSongList(shuffledArray);\n  };\n\n  // This function handles the user action of clicking on a song\n  // to play it. If a user manually selects a song, we turn\n  // shuffle mode off.\n  const manuallySelectSong = (song) => {\n    if (isShuffled) {\n      setIsShuffled(!isShuffled);\n    }\n\n    setCurrentSong(song);\n  };\n\n  // This function handles song navigation, whether we are on\n  // shuffle mode or not.\n  const navigatePlaylist = (event) => {\n    let songIndex;\n\n    // If no event is passed, default to 'forward'\n    const direction = event ? event.target.value : 'forward';\n\n    const lastSongInPlaylist = songs.length - 1;\n\n    // Find the current song's index in either the shuffled list\n    // or the regular list, depending on our shuffle status\n    const currentSongIndex = isShuffled\n      ? shuffledSongList.indexOf(currentSong)\n      : songs.indexOf(currentSong);\n\n    if (direction === 'forward') {\n      if (currentSongIndex === lastSongInPlaylist) {\n        songIndex = 0;\n      } else {\n        songIndex = currentSongIndex + 1;\n      }\n    } else {\n      // TODO: whats the best UX here?\n      if (currentSongIndex === 0) {\n        songIndex = lastSongInPlaylist;\n      } else {\n        songIndex = currentSongIndex - 1;\n      }\n    }\n\n    if (isShuffled) {\n      setCurrentSong(shuffledSongList[songIndex]);\n    } else {\n      setCurrentSong(songs[songIndex]);\n    }\n  };\n\n  return (\n    <div className=\"music-player\">\n      {songs.length ? (\n        <div>\n          <Controls\n            currentSong={currentSong}\n            audioPlayer={audioPlayer}\n            isPlaying={isPlaying}\n            handleNav={(e) => navigatePlaylist(e)}\n            handlePlayOrPause={() => setIsPlaying(!isPlaying)}\n          />\n          <SongList\n            songs={songs}\n            isShuffled={isShuffled}\n            handleShuffle={() => shufflePlaylist()}\n            handleSelectSong={(song) => manuallySelectSong(song)}\n            currentSongId={currentSong.id}\n          />\n        </div>\n      ) : (\n        <div>no songs sad</div>\n      )}\n    </div>\n  );\n};\n\nexport default MusicPlayerContainer;\n","import React from 'react';\n\nconst Controls = (props) => {\n  const {\n    currentSong,\n    audioPlayer,\n    isPlaying,\n    handleNav,\n    handlePlayOrPause\n  } = props;\n\n  const buttonCopy = isPlaying ? 'Pause' : 'Play';\n\n  return (\n    <div>\n      <h1>{currentSong.track}</h1>\n      <audio src={currentSong.url} ref={audioPlayer} type=\"audio/mpeg\">\n        Your browser does not support the audio tag.\n      </audio>\n      <div className=\"music-player-controls\">\n        <button className=\"nav-btn\" value=\"backward\" onClick={handleNav}>\n          Prev\n        </button>\n        <button className=\"play-pause-btn\" onClick={handlePlayOrPause}>\n          {buttonCopy}\n        </button>\n        <button className=\"nav-btn\" value=\"forward\" onClick={handleNav}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\n\nconst Song = (props) => {\n  const { artist, album, track } = props;\n\n  return (\n    <div>\n      <h4>{track}</h4>\n      <p>\n        {artist} - {album}\n      </p>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from 'react';\n\n// components\nimport Song from './song';\n\nconst SongList = (props) => {\n  const {\n    songs,\n    isShuffled,\n    handleShuffle,\n    currentSongId,\n    handleSelectSong\n  } = props;\n\n  return (\n    <div className=\"playlist\">\n      <h3>Playlist</h3>\n      <div className=\"shuffle-toggle\">\n        <label>\n          <input\n            name=\"isShuffled\"\n            type=\"checkbox\"\n            id=\"shuffle-songs\"\n            checked={isShuffled}\n            onChange={handleShuffle}\n          />\n          Shuffle\n        </label>\n      </div>\n      <ul>\n        {songs.map((song) => {\n          return (\n            <li\n              key={song.id}\n              className={currentSongId === song.id ? 'current-song' : 'song'}\n            >\n              <button onClick={() => handleSelectSong(song)}>\n                <Song\n                  artist={song.artist}\n                  album={song.album}\n                  track={song.track}\n                  url={song.url}\n                  id={song.id}\n                />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SongList;\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div className=\"error\">\n      <h4>Dang, we had trouble loading your music.</h4>\n      <p>Please double check your playlist file and try again.</p>\n    </div>\n  );\n};\n\nexport default Error;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\n\nimport App from 'components/App'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'))\n})\n","export default [\n  {\n    artist: 'Frank Ocean',\n    album: 'channel ORANGE',\n    track: 'Sweet Life',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/frank_ocean_sweet_life.mp3',\n    id: '7a187a2c-e6fe-46a6-a8d4-5b5984da3de3'\n  },\n  {\n    artist: 'Grace Jones',\n    album: 'Bulletproof Heart',\n    track: 'On My Way',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/grace_jones_on_my_way.mp3',\n    id: '9f6b44a3-0d57-4ae1-bfab-2447adf6eaf0'\n  },\n  {\n    artist: 'Junior Boys',\n    album: 'Big Black Coat',\n    track: 'You Say That',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/junior_boys_you_say_that.mp3',\n    id: '1c8d7409-59fb-4bf8-9ee6-8a328559754a'\n  },\n  {\n    artist: 'Kate Bush',\n    album: 'Hounds of Love',\n    track: 'Running Up That Hill',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/kate_bush_running_up_that_hill.mp3',\n    id: 'a27f140e-082d-4004-9368-1c7bfd84e9d0'\n  },\n  {\n    artist: 'King',\n    album: 'We Are King',\n    track: 'Supernatural',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/king_supernatural.mp3',\n    id: '0a78d3b2-7dc6-462b-8d8c-a5310ccb6451'\n  },\n  {\n    artist: 'Terry Riley',\n    album: 'Persian Surgery Dervishes',\n    track: 'Performance 1, part 1',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/terry_riley_persian_surgery_dervises_performance_1_part_1.mp3',\n    id: 'd7e10f3c-e967-43f8-babc-14ce537a2578'\n  }\n]\n"]}