{"version":3,"sources":["app/components/App.jsx","app/components/containers/musicPlayerContainer.js","app/components/features/controls.js","app/components/features/song.js","app/components/features/songlist.js","app/initialize.js","app/playlist.js"],"names":["App","MusicPlayerContainer","songs","playlist","audioPlayer","currentSongIndex","setCurrentSongIndex","isPlaying","setIsPlaying","isShuffled","setIsShuffled","shuffledIndexList","setShuffledIndexList","current","play","pause","addEventListener","navigatePlaylist","shufflePlaylist","manuallySelectSong","song","songIndex","indexOf","push","event","lastSongInPlaylist","length","direction","target","value","Math","floor","random","pop","url","e","id","Controls","props","currentSong","handleNav","handlePlayOrPause","buttonCopy","track","Song","artist","album","SongList","handleShuffle","currentSongId","handleSelectSong","map","document","ReactDOM","render","querySelector"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from 'react';\n\nimport MusicPlayerContainer from './containers/musicPlayerContainer';\n\nconst App = () => {\n  return <MusicPlayerContainer />;\n};\n\nexport default App;\n","import React, { useEffect, useRef, useState } from 'react';\n\n// feature components\nimport Controls from '../features/controls';\nimport SongList from '../features/songlist';\n\n// song data\nimport playlist from '../../playlist';\n\nconst MusicPlayerContainer = () => {\n  const songs = playlist;\n  const audioPlayer = useRef(null);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isShuffled, setIsShuffled] = useState(false);\n  const [shuffledIndexList, setShuffledIndexList] = useState([]);\n\n  // Keep playing audio as long as `isPlaying` is true. If a new song is\n  // selected while `isPlaying` is true, start it up. If `isPlaying` is\n  // false, we pause the song!\n  useEffect(() => {\n    if (isPlaying) {\n      audioPlayer.current.play();\n    } else {\n      audioPlayer.current.pause();\n    }\n  }, [currentSongIndex, isPlaying]);\n\n  // Listen for a song end so we can find the next song and start\n  // playing it automatically\n  useEffect(() => {\n    audioPlayer.current.addEventListener('ended', () => {\n      navigatePlaylist();\n    });\n  });\n\n  // This function does the two initial action items\n  const shufflePlaylist = () => {\n    setIsShuffled(!isShuffled);\n    if (isShuffled) {\n      setShuffledIndexList([currentSongIndex]);\n    } else {\n      setShuffledIndexList([]);\n    }\n  };\n\n  // This function handles the user action of clicking on a song\n  // to play it\n  const manuallySelectSong = (song) => {\n    const songIndex = songs.indexOf(song);\n\n    // if we are in shuffle mode, save this song to our history stack\n    if (isShuffled) {\n      shuffledIndexList.push(songIndex);\n    }\n\n    setCurrentSongIndex(songIndex);\n  };\n\n  const navigatePlaylist = (event) => {\n    let songIndex;\n    const lastSongInPlaylist = songs.length - 1;\n\n    // If no event is passed, 'forward' is the default direction\n    const direction = event ? event.target.value : 'forward';\n\n    if (isShuffled) {\n      if (direction === 'forward') {\n        songIndex = Math.floor(Math.random() * songs.length);\n        shuffledIndexList.push(songIndex);\n      } else {\n        // if we are at the beginning of our shuffled list,\n        // don't let the user navigate further back\n        if (shuffledIndexList.length === 1) {\n          songIndex = shuffledIndexList[0];\n        } else {\n          // pop off the current song\n          shuffledIndexList.pop();\n          // set the next song index to the next item in the array\n          songIndex = shuffledIndexList[shuffledIndexList.length - 1];\n        }\n      }\n    } else {\n      if (direction === 'forward') {\n        if (currentSongIndex === lastSongInPlaylist) {\n          songIndex = 0;\n        } else {\n          songIndex = currentSongIndex + 1;\n        }\n      } else {\n        if (currentSongIndex === 0) {\n          songIndex = lastSongInPlaylist;\n        } else {\n          songIndex = currentSongIndex - 1;\n        }\n      }\n    }\n\n    setCurrentSongIndex(songIndex);\n  };\n\n  return (\n    <div className=\"music-player\">\n      <Controls\n        currentSong={songs[currentSongIndex]}\n        currentSongUrl={songs[currentSongIndex].url}\n        audioPlayer={audioPlayer}\n        isPlaying={isPlaying}\n        handleNav={(e) => navigatePlaylist(e)}\n        handlePlayOrPause={() => setIsPlaying(!isPlaying)}\n      />\n      <SongList\n        songs={songs}\n        isShuffled={isShuffled}\n        handleShuffle={() => shufflePlaylist()}\n        handleSelectSong={(song) => manuallySelectSong(song)}\n        currentSongId={songs[currentSongIndex].id}\n      />\n    </div>\n  );\n};\n\nexport default MusicPlayerContainer;\n","import React from 'react';\n\nconst Controls = (props) => {\n  const {\n    currentSong,\n    audioPlayer,\n    isPlaying,\n    handleNav,\n    handlePlayOrPause\n  } = props;\n\n  const buttonCopy = isPlaying ? 'Pause' : 'Play';\n\n  return (\n    <div>\n      <h1>{currentSong.track}</h1>\n      <audio src={currentSong.url} ref={audioPlayer} type=\"audio/mpeg\">\n        Your browser does not support the audio tag.\n      </audio>\n      <div className=\"music-player-controls\">\n        <button className=\"nav-btn\" value=\"backward\" onClick={handleNav}>\n          Prev\n        </button>\n        <button className=\"play-pause-btn\" onClick={handlePlayOrPause}>\n          {buttonCopy}\n        </button>\n        <button className=\"nav-btn\" value=\"forward\" onClick={handleNav}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\n\nconst Song = (props) => {\n  const { artist, album, track } = props;\n\n  return (\n    <div>\n      <h4>{track}</h4>\n      <p>\n        {artist} - {album}\n      </p>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from 'react';\n\n// components\nimport Song from './song';\n\nconst SongList = (props) => {\n  const {\n    songs,\n    isShuffled,\n    handleShuffle,\n    currentSongId,\n    handleSelectSong\n  } = props;\n\n  if (!songs || songs.length === 0) return <p>No Songs</p>;\n\n  return (\n    <div className=\"playlist\">\n      <h3>Playlist</h3>\n      <div className=\"shuffle-toggle\">\n        <label>\n          <input\n            name=\"isShuffled\"\n            type=\"checkbox\"\n            id=\"shuffle-songs\"\n            checked={isShuffled}\n            onChange={handleShuffle}\n          />\n          Shuffle\n        </label>\n      </div>\n      <ul>\n        {songs.map((song) => {\n          return (\n            <li\n              key={song.id}\n              className={currentSongId === song.id ? 'current-song' : 'song'}\n            >\n              <button onClick={() => handleSelectSong(song)}>\n                <Song\n                  artist={song.artist}\n                  album={song.album}\n                  track={song.track}\n                  url={song.url}\n                  id={song.id}\n                />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SongList;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\n\nimport App from 'components/App'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'))\n})\n","export default [\n  {\n    artist: 'Frank Ocean',\n    album: 'channel ORANGE',\n    track: 'Sweet Life',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/frank_ocean_sweet_life.mp3',\n    id: '7a187a2c-e6fe-46a6-a8d4-5b5984da3de3'\n  },\n  {\n    artist: 'Grace Jones',\n    album: 'Bulletproof Heart',\n    track: 'On My Way',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/grace_jones_on_my_way.mp3',\n    id: '9f6b44a3-0d57-4ae1-bfab-2447adf6eaf0'\n  },\n  {\n    artist: 'Junior Boys',\n    album: 'Big Black Coat',\n    track: 'You Say That',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/junior_boys_you_say_that.mp3',\n    id: '1c8d7409-59fb-4bf8-9ee6-8a328559754a'\n  },\n  {\n    artist: 'Kate Bush',\n    album: 'Hounds of Love',\n    track: 'Running Up That Hill',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/kate_bush_running_up_that_hill.mp3',\n    id: 'a27f140e-082d-4004-9368-1c7bfd84e9d0'\n  },\n  {\n    artist: 'King',\n    album: 'We Are King',\n    track: 'Supernatural',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/king_supernatural.mp3',\n    id: '0a78d3b2-7dc6-462b-8d8c-a5310ccb6451'\n  },\n  {\n    artist: 'Terry Riley',\n    album: 'Persian Surgery Dervishes',\n    track: 'Performance 1, part 1',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/terry_riley_persian_surgery_dervises_performance_1_part_1.mp3',\n    id: 'd7e10f3c-e967-43f8-babc-14ce537a2578'\n  }\n]\n"]}