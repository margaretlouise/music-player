{"version":3,"sources":["app/components/App.jsx","app/components/containers/musicPlayerContainer.js","app/components/features/controls.js","app/components/features/song.js","app/components/features/songlist.js","app/components/shared/error.js","app/initialize.js","app/playlist.js"],"names":["App","playlist","length","MusicPlayerContainer","props","songs","audioPlayer","isPlaying","setIsPlaying","currentSong","setCurrentSong","isShuffled","setIsShuffled","shuffledSongList","setShuffledSongList","showEndPlaylistAlert","setShowEndPlaylistAlert","songHistory","setSongHistory","current","play","pause","concat","addEventListener","navigatePlaylist","event","direction","target","value","navForward","navBack","pop","songIndex","currentSongIndex","indexOf","shufflePlaylist","shuffledArray","array","startedAt","splice","i","j","Math","floor","random","temp","e","song","id","Controls","handleNav","handlePlayOrPause","buttonCopy","track","url","Song","artist","album","SongList","handleShuffle","currentSongId","handleSelectSong","map","Error","document","ReactDOM","render","querySelector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAGA;;AAGA;;;;AAPA;AAGA;AAGA;AAGA,IAAMA,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SAAOC,qBAASC,MAAT,gBACL,gCAAC,gCAAD;AAAsB,SAAK,EAAED;AAA7B,IADK,gBAGL,gCAAC,iBAAD,OAHF;AAKD,CAND;;eAQeD,G;;;;;;;;;;;;;;ACnBf;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAAA,MAC9BC,KAD8B,GACpBD,KADoB,CAC9BC,KAD8B;AAEtC,MAAMC,WAAW,GAAG,mBAAO,IAAP,CAApB;;AAFsC,kBAIJ,qBAAS,KAAT,CAJI;AAAA;AAAA,MAI/BC,SAJ+B;AAAA,MAIpBC,YAJoB;;AAAA,mBAKA,qBAASH,KAAK,CAAC,CAAD,CAAd,CALA;AAAA;AAAA,MAK/BI,WAL+B;AAAA,MAKlBC,cALkB;;AAAA,mBAMF,qBAAS,KAAT,CANE;AAAA;AAAA,MAM/BC,UAN+B;AAAA,MAMnBC,aANmB;;AAAA,mBAOU,qBAAS,EAAT,CAPV;AAAA;AAAA,MAO/BC,gBAP+B;AAAA,MAObC,mBAPa;;AAAA,mBAQkB,qBAAS,KAAT,CARlB;AAAA;AAAA,MAQ/BC,oBAR+B;AAAA,MAQTC,uBARS;;AAAA,oBASA,qBAAS,EAAT,CATA;AAAA;AAAA,MAS/BC,WAT+B;AAAA,MASlBC,cATkB,mBAWtC;AACA;AACA;;;AACA,wBAAU,YAAM;AACd,QAAIX,SAAJ,EAAe;AACbD,iBAAW,CAACa,OAAZ,CAAoBC,IAApB;AACD,KAFD,MAEO;AACLd,iBAAW,CAACa,OAAZ,CAAoBE,KAApB;AACD,KALa,CAOd;;;AACAH,kBAAc,CAACD,WAAW,CAACK,MAAZ,CAAmBb,WAAnB,CAAD,CAAd;AACD,GATD,EASG,CAACA,WAAD,EAAcF,SAAd,CATH,EAdsC,CAyBtC;AACA;;AACA,wBAAU,YAAM;AACdD,eAAW,CAACa,OAAZ,CAAoBI,gBAApB,CAAqC,OAArC,EAA8C,YAAM;AAClDC,sBAAgB;AACjB,KAFD;AAGD,GAJD,EAIG,EAJH,EA3BsC,CAiCtC;AACA;AACA;;AACA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,QAAMC,SAAS,GAAGD,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaC,KAAhB,GAAwB,SAA/C;;AAEA,QAAIF,SAAS,KAAK,SAAlB,EAA6B;AAC3BG,gBAAU;AACX,KAFD,MAEO;AACLC,aAAO;AACR;AACF,GARD;;AAUA,MAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB;AACA;AACA;AACA,QAAIb,WAAW,CAACf,MAAZ,IAAsB,CAA1B,EAA6B;AAC3BU,mBAAa,CAAC,KAAD,CAAb;AACAF,oBAAc,CAACL,KAAK,CAAC,CAAD,CAAN,CAAd;AACAW,6BAAuB,CAAC,IAAD,CAAvB;AACD,KAJD,MAIO;AACL;AACA;AACAC,iBAAW,CAACc,GAAZ;AACArB,oBAAc,CAACO,WAAW,CAACc,GAAZ,EAAD,CAAd;AACD;AACF,GAdD;;AAgBA,MAAMF,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIG,SAAJ;AACAhB,2BAAuB,CAAC,KAAD,CAAvB,CAFuB,CAIvB;AACA;;AACA,QAAMiB,gBAAgB,GAAGtB,UAAU,GAC/BE,gBAAgB,CAACqB,OAAjB,CAAyBzB,WAAzB,CAD+B,GAE/BJ,KAAK,CAAC6B,OAAN,CAAczB,WAAd,CAFJ;;AAIA,QAAIwB,gBAAgB,KAAK5B,KAAK,CAACH,MAAN,GAAe,CAAxC,EAA2C;AACzC8B,eAAS,GAAG,CAAZ;AACD,KAFD,MAEO;AACLA,eAAS,GAAGC,gBAAgB,GAAG,CAA/B;AACD;;AAEDtB,cAAU,GACND,cAAc,CAACG,gBAAgB,CAACmB,SAAD,CAAjB,CADR,GAENtB,cAAc,CAACL,KAAK,CAAC2B,SAAD,CAAN,CAFlB;AAGD,GAnBD,CA9DsC,CAmFtC;AACA;AACA;;;AACA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BvB,iBAAa,CAAC,CAACD,UAAF,CAAb,CAD4B,CAG5B;AACA;;AACA,QAAIyB,aAAa,GAAG,CAAC3B,WAAD,CAApB,CAL4B,CAO5B;;AACA,QAAI4B,KAAK,sBAAOhC,KAAP,CAAT,CAR4B,CAS5B;;;AACA,QAAMiC,SAAS,GAAGD,KAAK,CAACH,OAAN,CAAczB,WAAd,CAAlB,CAV4B,CAW5B;;AACA4B,SAAK,CAACE,MAAN,CAAaD,SAAb,EAAwB,CAAxB,EAZ4B,CAc5B;;AACA,SAAK,IAAIE,CAAC,GAAGH,KAAK,CAACnC,MAAN,GAAe,CAA5B,EAA+BsC,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIK,IAAI,GAAGR,KAAK,CAACG,CAAD,CAAhB;AACAH,WAAK,CAACG,CAAD,CAAL,GAAWH,KAAK,CAACI,CAAD,CAAhB;AACAJ,WAAK,CAACI,CAAD,CAAL,GAAWI,IAAX;AACD,KApB2B,CAsB5B;;;AACAT,iBAAa,GAAGA,aAAa,CAACd,MAAd,CAAqBe,KAArB,CAAhB;AAEAvB,uBAAmB,CAACsB,aAAD,CAAnB;AACD,GA1BD;;AA4BA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,gCAAC,oBAAD;AACE,eAAW,EAAE3B,WADf;AAEE,eAAW,EAAEH,WAFf;AAGE,aAAS,EAAEC,SAHb;AAIE,aAAS,EAAE,mBAACuC,CAAD;AAAA,aAAOtB,gBAAgB,CAACsB,CAAD,CAAvB;AAAA,KAJb;AAKE,qBAAiB,EAAE;AAAA,aAAMtC,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA;AALrB,IADF,eAQE,gCAAC,oBAAD;AACE,SAAK,EAAEF,KADT;AAEE,cAAU,EAAEM,UAFd;AAGE,iBAAa,EAAE;AAAA,aAAMwB,eAAe,EAArB;AAAA,KAHjB;AAIE,oBAAgB,EAAE,0BAACY,IAAD;AAAA,aAAUrC,cAAc,CAACqC,IAAD,CAAxB;AAAA,KAJpB;AAKE,iBAAa,EAAEtC,WAAW,CAACuC,EAL7B;AAME,wBAAoB,EAAEjC;AANxB,IARF,CADF;AAmBD,CArID;;eAuIeZ,oB;;;;;;;;;;;;AC7If;;;;AAEA,IAAM8C,QAAQ,GAAG,SAAXA,QAAW,CAAC7C,KAAD,EAAW;AAAA,MAExBK,WAFwB,GAOtBL,KAPsB,CAExBK,WAFwB;AAAA,MAGxBH,WAHwB,GAOtBF,KAPsB,CAGxBE,WAHwB;AAAA,MAIxBC,SAJwB,GAOtBH,KAPsB,CAIxBG,SAJwB;AAAA,MAKxB2C,SALwB,GAOtB9C,KAPsB,CAKxB8C,SALwB;AAAA,MAMxBC,iBANwB,GAOtB/C,KAPsB,CAMxB+C,iBANwB;AAS1B,MAAMC,UAAU,GAAG7C,SAAS,GAAG,OAAH,GAAa,MAAzC;AAEA,sBACE,0DACE,4CAAKE,WAAW,CAAC4C,KAAjB,CADF,eAEE;AAAO,OAAG,EAAE5C,WAAW,CAAC6C,GAAxB;AAA6B,OAAG,EAAEhD,WAAlC;AAA+C,QAAI,EAAC;AAApD,oDAFF,eAKE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAQ,aAAS,EAAC,SAAlB;AAA4B,SAAK,EAAC,UAAlC;AAA6C,WAAO,EAAE4C;AAAtD,YADF,eAIE;AAAQ,aAAS,EAAC,gBAAlB;AAAmC,WAAO,EAAEC;AAA5C,KACGC,UADH,CAJF,eAOE;AAAQ,aAAS,EAAC,SAAlB;AAA4B,SAAK,EAAC,SAAlC;AAA4C,WAAO,EAAEF;AAArD,YAPF,CALF,CADF;AAmBD,CA9BD;;eAgCeD,Q;;;;;;;;;;;;AClCf;;;;AAEA,IAAMM,IAAI,GAAG,SAAPA,IAAO,CAACnD,KAAD,EAAW;AAAA,MACdoD,MADc,GACWpD,KADX,CACdoD,MADc;AAAA,MACNC,KADM,GACWrD,KADX,CACNqD,KADM;AAAA,MACCJ,KADD,GACWjD,KADX,CACCiD,KADD;AAGtB,sBACE,0DACE,4CAAKA,KAAL,CADF,eAEE,2CACGG,MADH,SACcC,KADd,CAFF,CADF;AAQD,CAXD;;eAaeF,I;;;;;;;;;;;;ACff;;AAGA;;;;AADA;AAGA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACtD,KAAD,EAAW;AAAA,MAExBC,KAFwB,GAQtBD,KARsB,CAExBC,KAFwB;AAAA,MAGxBM,UAHwB,GAQtBP,KARsB,CAGxBO,UAHwB;AAAA,MAIxBgD,aAJwB,GAQtBvD,KARsB,CAIxBuD,aAJwB;AAAA,MAKxBC,aALwB,GAQtBxD,KARsB,CAKxBwD,aALwB;AAAA,MAMxBC,gBANwB,GAQtBzD,KARsB,CAMxByD,gBANwB;AAAA,MAOxB9C,oBAPwB,GAQtBX,KARsB,CAOxBW,oBAPwB;AAU1B,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,uDADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE,4DACE;AACE,QAAI,EAAC,YADP;AAEE,QAAI,EAAC,UAFP;AAGE,MAAE,EAAC,eAHL;AAIE,WAAO,EAAEJ,UAJX;AAKE,YAAQ,EAAEgD;AALZ,IADF,YADF,CAFF,EAcG5C,oBAAoB,iBACnB;AAAI,aAAS,EAAC;AAAd,8DAfJ,eAmBE,4CACGV,KAAK,CAACyD,GAAN,CAAU,UAACf,IAAD,EAAU;AACnB,wBACE;AACE,SAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,eAAS,EAAEY,aAAa,KAAKb,IAAI,CAACC,EAAvB,GAA4B,cAA5B,GAA6C;AAF1D,oBAIE;AAAQ,aAAO,EAAE;AAAA,eAAMa,gBAAgB,CAACd,IAAD,CAAtB;AAAA;AAAjB,oBACE,gCAAC,gBAAD;AACE,YAAM,EAAEA,IAAI,CAACS,MADf;AAEE,WAAK,EAAET,IAAI,CAACU,KAFd;AAGE,WAAK,EAAEV,IAAI,CAACM,KAHd;AAIE,SAAG,EAAEN,IAAI,CAACO,GAJZ;AAKE,QAAE,EAAEP,IAAI,CAACC;AALX,MADF,CAJF,CADF;AAgBD,GAjBA,CADH,CAnBF,CADF;AA0CD,CApDD;;eAsDeU,Q;;;;;;;;;;;;AC3Df;;;;AAEA,IAAMK,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,uFADF,eAEE,mGAFF,CADF;AAMD,CAPD;;eASeA,K;;;;;;;ACXf;;AACA;;AAEA;;;;AAEAC,QAAQ,CAACzC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD0C,uBAASC,MAAT,eAAgB,gCAAC,eAAD,OAAhB,EAAyBF,QAAQ,CAACG,aAAT,CAAuB,MAAvB,CAAzB;AACD,CAFD;;;;;;;;;;eCLe,CACb;AACEX,QAAM,EAAE,aADV;AAEEC,OAAK,EAAE,gBAFT;AAGEJ,OAAK,EAAE,YAHT;AAIEC,KAAG,EACD,sFALJ;AAMEN,IAAE,EAAE;AANN,CADa,EASb;AACEQ,QAAM,EAAE,aADV;AAEEC,OAAK,EAAE,mBAFT;AAGEJ,OAAK,EAAE,WAHT;AAIEC,KAAG,EACD,qFALJ;AAMEN,IAAE,EAAE;AANN,CATa,EAiBb;AACEQ,QAAM,EAAE,aADV;AAEEC,OAAK,EAAE,gBAFT;AAGEJ,OAAK,EAAE,cAHT;AAIEC,KAAG,EACD,wFALJ;AAMEN,IAAE,EAAE;AANN,CAjBa,EAyBb;AACEQ,QAAM,EAAE,WADV;AAEEC,OAAK,EAAE,gBAFT;AAGEJ,OAAK,EAAE,sBAHT;AAIEC,KAAG,EACD,8FALJ;AAMEN,IAAE,EAAE;AANN,CAzBa,EAiCb;AACEQ,QAAM,EAAE,MADV;AAEEC,OAAK,EAAE,aAFT;AAGEJ,OAAK,EAAE,cAHT;AAIEC,KAAG,EACD,iFALJ;AAMEN,IAAE,EAAE;AANN,CAjCa,EAyCb;AACEQ,QAAM,EAAE,aADV;AAEEC,OAAK,EAAE,2BAFT;AAGEJ,OAAK,EAAE,uBAHT;AAIEC,KAAG,EACD,yHALJ;AAMEN,IAAE,EAAE;AANN,CAzCa,C","file":"public/app.js","sourcesContent":["import React from 'react';\n\n// containers\nimport MusicPlayerContainer from './containers/musicPlayerContainer';\n\n// shared components\nimport Error from './shared/error';\n\n// song data\nimport playlist from '../playlist';\n\nconst App = () => {\n  return playlist.length ? (\n    <MusicPlayerContainer songs={playlist} />\n  ) : (\n    <Error />\n  );\n};\n\nexport default App;\n","import React, { useEffect, useRef, useState } from 'react';\n\n// feature components\nimport Controls from '../features/controls';\nimport SongList from '../features/songlist';\n\nconst MusicPlayerContainer = (props) => {\n  const { songs } = props;\n  const audioPlayer = useRef(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isShuffled, setIsShuffled] = useState(false);\n  const [shuffledSongList, setShuffledSongList] = useState([]);\n  const [showEndPlaylistAlert, setShowEndPlaylistAlert] = useState(false);\n  const [songHistory, setSongHistory] = useState([]);\n\n  // Keep playing audio as long as `isPlaying` is true. If a new song is\n  // selected while `isPlaying` is true, start it up. If `isPlaying` is\n  // false, pause the song!\n  useEffect(() => {\n    if (isPlaying) {\n      audioPlayer.current.play();\n    } else {\n      audioPlayer.current.pause();\n    }\n\n    // Save each played song to our listening history as we go\n    setSongHistory(songHistory.concat(currentSong));\n  }, [currentSong, isPlaying]);\n\n  // Listen for song end so we can navigate to the next song and start\n  // playing it automatically.\n  useEffect(() => {\n    audioPlayer.current.addEventListener('ended', () => {\n      navigatePlaylist();\n    });\n  }, []);\n\n  // This function handles song navigation, whether we are on\n  // shuffle mode or regular listening. If no event is passed,\n  // we default to 'forward'\n  const navigatePlaylist = (event) => {\n    const direction = event ? event.target.value : 'forward';\n\n    if (direction === 'forward') {\n      navForward();\n    } else {\n      navBack();\n    }\n  };\n\n  const navBack = () => {\n    // When we reach the end of our song history,\n    // make sure shuffle is set to off, and don't let\n    // the user go past the first song in the playlist\n    if (songHistory.length <= 1) {\n      setIsShuffled(false);\n      setCurrentSong(songs[0]);\n      setShowEndPlaylistAlert(true);\n    } else {\n      // Otherwise, pop off the current song and then\n      // pop the next song off to set to the new current.\n      songHistory.pop();\n      setCurrentSong(songHistory.pop());\n    }\n  };\n\n  const navForward = () => {\n    let songIndex;\n    setShowEndPlaylistAlert(false);\n\n    // Find the index of the current song in either the shuffled list\n    // or the regular list, depending on our shuffle status\n    const currentSongIndex = isShuffled\n      ? shuffledSongList.indexOf(currentSong)\n      : songs.indexOf(currentSong);\n\n    if (currentSongIndex === songs.length - 1) {\n      songIndex = 0;\n    } else {\n      songIndex = currentSongIndex + 1;\n    }\n\n    isShuffled\n      ? setCurrentSong(shuffledSongList[songIndex])\n      : setCurrentSong(songs[songIndex]);\n  };\n\n  // This function does the two initial action items needed when a\n  // user toggles shuffle off or on: set `isShuffled` and create\n  // a shuffled list of songs, starting with our current song\n  const shufflePlaylist = () => {\n    setIsShuffled(!isShuffled);\n\n    // Create a variable to store our shuffled array and put the\n    // current song as the first item in the array\n    let shuffledArray = [currentSong];\n\n    // Now make a copy of the songs array\n    let array = [...songs];\n    // Find the song we are starting with\n    const startedAt = array.indexOf(currentSong);\n    // Remove it, we don't want to shuffle it\n    array.splice(startedAt, 1);\n\n    // Shuffle the items in the array\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    // Add the shuffled items to our starting song\n    shuffledArray = shuffledArray.concat(array);\n\n    setShuffledSongList(shuffledArray);\n  };\n\n  return (\n    <div className=\"music-player\">\n      <Controls\n        currentSong={currentSong}\n        audioPlayer={audioPlayer}\n        isPlaying={isPlaying}\n        handleNav={(e) => navigatePlaylist(e)}\n        handlePlayOrPause={() => setIsPlaying(!isPlaying)}\n      />\n      <SongList\n        songs={songs}\n        isShuffled={isShuffled}\n        handleShuffle={() => shufflePlaylist()}\n        handleSelectSong={(song) => setCurrentSong(song)}\n        currentSongId={currentSong.id}\n        showEndPlaylistAlert={showEndPlaylistAlert}\n      />\n    </div>\n  );\n};\n\nexport default MusicPlayerContainer;\n","import React from 'react';\n\nconst Controls = (props) => {\n  const {\n    currentSong,\n    audioPlayer,\n    isPlaying,\n    handleNav,\n    handlePlayOrPause\n  } = props;\n\n  const buttonCopy = isPlaying ? 'Pause' : 'Play';\n\n  return (\n    <div>\n      <h1>{currentSong.track}</h1>\n      <audio src={currentSong.url} ref={audioPlayer} type=\"audio/mpeg\">\n        Your browser does not support the audio tag.\n      </audio>\n      <div className=\"music-player-controls\">\n        <button className=\"nav-btn\" value=\"backward\" onClick={handleNav}>\n          Prev\n        </button>\n        <button className=\"play-pause-btn\" onClick={handlePlayOrPause}>\n          {buttonCopy}\n        </button>\n        <button className=\"nav-btn\" value=\"forward\" onClick={handleNav}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\n\nconst Song = (props) => {\n  const { artist, album, track } = props;\n\n  return (\n    <div>\n      <h4>{track}</h4>\n      <p>\n        {artist} - {album}\n      </p>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from 'react';\n\n// components\nimport Song from './song';\n\nconst SongList = (props) => {\n  const {\n    songs,\n    isShuffled,\n    handleShuffle,\n    currentSongId,\n    handleSelectSong,\n    showEndPlaylistAlert\n  } = props;\n\n  return (\n    <div className=\"playlist\">\n      <h3>Playlist</h3>\n      <div className=\"shuffle-toggle\">\n        <label>\n          <input\n            name=\"isShuffled\"\n            type=\"checkbox\"\n            id=\"shuffle-songs\"\n            checked={isShuffled}\n            onChange={handleShuffle}\n          />\n          Shuffle\n        </label>\n      </div>\n      {showEndPlaylistAlert && (\n        <h5 className=\"alert\">\n          You've reached the end of your song listening history.\n        </h5>\n      )}\n      <ul>\n        {songs.map((song) => {\n          return (\n            <li\n              key={song.id}\n              className={currentSongId === song.id ? 'current-song' : 'song'}\n            >\n              <button onClick={() => handleSelectSong(song)}>\n                <Song\n                  artist={song.artist}\n                  album={song.album}\n                  track={song.track}\n                  url={song.url}\n                  id={song.id}\n                />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SongList;\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div className=\"error\">\n      <h4>Dang, we had trouble loading your music.</h4>\n      <p>Please double check your playlist file and try again.</p>\n    </div>\n  );\n};\n\nexport default Error;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\n\nimport App from 'components/App'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'))\n})\n","export default [\n  {\n    artist: 'Frank Ocean',\n    album: 'channel ORANGE',\n    track: 'Sweet Life',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/frank_ocean_sweet_life.mp3',\n    id: '7a187a2c-e6fe-46a6-a8d4-5b5984da3de3'\n  },\n  {\n    artist: 'Grace Jones',\n    album: 'Bulletproof Heart',\n    track: 'On My Way',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/grace_jones_on_my_way.mp3',\n    id: '9f6b44a3-0d57-4ae1-bfab-2447adf6eaf0'\n  },\n  {\n    artist: 'Junior Boys',\n    album: 'Big Black Coat',\n    track: 'You Say That',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/junior_boys_you_say_that.mp3',\n    id: '1c8d7409-59fb-4bf8-9ee6-8a328559754a'\n  },\n  {\n    artist: 'Kate Bush',\n    album: 'Hounds of Love',\n    track: 'Running Up That Hill',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/kate_bush_running_up_that_hill.mp3',\n    id: 'a27f140e-082d-4004-9368-1c7bfd84e9d0'\n  },\n  {\n    artist: 'King',\n    album: 'We Are King',\n    track: 'Supernatural',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/king_supernatural.mp3',\n    id: '0a78d3b2-7dc6-462b-8d8c-a5310ccb6451'\n  },\n  {\n    artist: 'Terry Riley',\n    album: 'Persian Surgery Dervishes',\n    track: 'Performance 1, part 1',\n    url:\n      'https://s3.us-east-2.amazonaws.com/react-challenge/tracks/terry_riley_persian_surgery_dervises_performance_1_part_1.mp3',\n    id: 'd7e10f3c-e967-43f8-babc-14ce537a2578'\n  }\n]\n"]}